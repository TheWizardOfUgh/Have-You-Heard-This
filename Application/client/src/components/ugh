import React, { useState, useEffect } from "react";
import { Link, useHistory } from "react-router-dom";
import AnimatedCard from "../motionComponents/AnimatedCard.js";
import SongTrack from "../discover/SongTrack.js";
import Info from "../discover/Info.js";

function Discover({
}) {
  const [tracks, setTracks] = useState();
  const [display, setDisplay] = useState({
    song: "",
    image: "",
    artist: "",
    warn: "",
    success: "",
  });
  const [isLoading, setIsLoading] = useState(true);
  useEffect(() => {
    spotify.getPlaylistTracks(discoverPlaylist.id).then(
      (data) => {
        setTracks(data.body.items);
        setIsLoading(false);
      },
      (err) => {
        console.error(err);
      }
    );
  }, [discoverPlaylist, spotify]);

  return (
    <>
      <div className="flex flex-col items-center ml-1 ">
        <div className="flex flex-col items-center p-2 m-2 min-w-full">
          <h1 className="text-slate-100 pb-2">How popular should it be?</h1>
          <h1 className="text-slate-100 pb-2">{sliderVal}% Popularity</h1>
          <div className="flex flex-col items-center">
            <input className="min-w-96" id="slider" type="range" onChange={(val) => setSliderVal(val.target.value)}/>
          </div>
          <form className="h-9" onSubmit={searchSubmitHandler}>
            <button className="bg-slate-100 text-slate-900 h-full p-1 rounded-3xl px-3 ">
              <img className="" src="search.svg" width={12} alt="search" />
            </button>
          </form>
        </div>
      </div>
      <div className=" w-2/3 min-h-3/4 min-w-full">
        {isLoading ? (
          <h1 className="text-slate-50">Loading...</h1>
        ) : (
          <div className="grid grid-cols-4 md:grid-cols-10 gap-x-1 max-h-fit">
            {tracks.map((item) => {
              let imgUrl;
              if (!item.track.album.images[0]) {
                imgUrl = "album.png";
              } else {
                imgUrl = item.track.album.images[0].url;
              }
              return (
                <SongTrack
                  setDisplay={setDisplay}
                  imgUrl={imgUrl}
                  key={item.track.id}
                  id={item.track.id}
                  audioUrl={item.track.preview_url}
                  song={item.track.name}
                  artist={item.track.artists[0].name}
                  uri={item.track.uri}
                  spotify={spotify}
                />
              );
            })}
          </div>
        )}
      </div>
    </>
  );
}

export default Search;
